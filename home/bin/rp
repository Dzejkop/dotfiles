#!/bin/bash

show_help() {
  echo "rp - Rust Playground: Quickly create and test Rust code in a temporary environment"
  echo ""
  echo "Usage: rp [OPTIONS]"
  echo ""
  echo "Options:"
  echo "  --lib          Create a library crate instead of a binary"
  echo "  -s --serde        Add serde with derive features and serde_json"
  echo "  -a --async        Add tokio runtime and setup async main, only works in bin mode"
  echo "  -b --basic        Add basic deps like eyre"
  echo "  --help         Display this help message and exit"
  echo ""
  exit 0
}

# Create a temporary file for editing
tmpdir=$(mktemp -d /tmp/rp.XXXXXX)

# Ensure the temporary file is removed on script exit
trap 'rm -rf "$tmpdir"' EXIT

cd "$tmpdir" || exit

# Process args to determine crate type
libArg=""
fileToOpen="$tmpdir/src/main.rs"

for arg in "$@"; do
  case $arg in
  --lib)
    libArg="--lib"
    fileToOpen="$tmpdir/src/lib.rs"
    ;;
  --help)
    show_help
    ;;
  esac
done

# Initialize an empty Rust project
cargo init $libArg --name playground

# Process arguments
for arg in "$@"; do
  case $arg in
  --serde | -s)
    cargo add serde --features derive
    cargo add serde_json
    ;;
  --async | -a)
    cargo add tokio --features full
    ;;
  --basic | -b)
    cargo add eyre
    ;;
  esac
done

# Build
cargo build

# Open the temporary file in your preferred editor
"$EDITOR" "$fileToOpen"
